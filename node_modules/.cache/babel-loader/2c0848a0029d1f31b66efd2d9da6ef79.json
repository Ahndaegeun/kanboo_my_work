{"remainingRequest":"/Users/andaegeun/Desktop/kanboo_vue_merge/node_modules/babel-loader/lib/index.js!/Users/andaegeun/Desktop/kanboo_vue_merge/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/andaegeun/Desktop/kanboo_vue_merge/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/andaegeun/Desktop/kanboo_vue_merge/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/andaegeun/Desktop/kanboo_vue_merge/src/components/component/acess/projectDetail/gitAndIssue/GitCode.vue?vue&type=template&id=5ae03bc1","dependencies":[{"path":"/Users/andaegeun/Desktop/kanboo_vue_merge/src/components/component/acess/projectDetail/gitAndIssue/GitCode.vue","mtime":1639118944558},{"path":"/Users/andaegeun/Desktop/kanboo_vue_merge/babel.config.js","mtime":1639096172894},{"path":"/Users/andaegeun/Desktop/kanboo_vue_merge/node_modules/cache-loader/dist/cjs.js","mtime":1639096175720},{"path":"/Users/andaegeun/Desktop/kanboo_vue_merge/node_modules/babel-loader/lib/index.js","mtime":1639096175607},{"path":"/Users/andaegeun/Desktop/kanboo_vue_merge/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1639096183165},{"path":"/Users/andaegeun/Desktop/kanboo_vue_merge/node_modules/cache-loader/dist/cjs.js","mtime":1639096175720},{"path":"/Users/andaegeun/Desktop/kanboo_vue_merge/node_modules/vue-loader-v16/dist/index.js","mtime":1639096183158}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVFbGVtZW50QmxvY2sgYXMgX2NyZWF0ZUVsZW1lbnRCbG9jaywgY3JlYXRlQ29tbWVudFZOb2RlIGFzIF9jcmVhdGVDb21tZW50Vk5vZGUsIHRvRGlzcGxheVN0cmluZyBhcyBfdG9EaXNwbGF5U3RyaW5nLCByZXNvbHZlQ29tcG9uZW50IGFzIF9yZXNvbHZlQ29tcG9uZW50LCBjcmVhdGVWTm9kZSBhcyBfY3JlYXRlVk5vZGUgfSBmcm9tICJ2dWUiOwp2YXIgX2hvaXN0ZWRfMSA9IHsKICBjbGFzczogImdpdENvZGUiCn07CnZhciBfaG9pc3RlZF8yID0gewogIGtleTogMAp9OwoKdmFyIF9ob2lzdGVkXzMgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaDEiLCBudWxsLCAiRmlsZSBOYW1lIiwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzQgPSBbX2hvaXN0ZWRfM107CnZhciBfaG9pc3RlZF81ID0gewogIGtleTogMQp9Owp2YXIgX2hvaXN0ZWRfNiA9IHsKICBjbGFzczogImZpbGVDb250ZW50Igp9OwpleHBvcnQgZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHZhciBfdGhpcyA9IHRoaXM7CgogIHZhciBfY29tcG9uZW50X3ByaXNtX2VkaXRvciA9IF9yZXNvbHZlQ29tcG9uZW50KCJwcmlzbS1lZGl0b3IiKTsKCiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiZGl2IiwgX2hvaXN0ZWRfMSwgW3RoaXMuJHN0b3JlLnN0YXRlLmdpdC5zZWxlY3RlZEZpbGVOYW1lID09PSAnJyA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIF9ob2lzdGVkXzIsIF9ob2lzdGVkXzQpKSA6IHRoaXMuJHN0b3JlLnN0YXRlLmdpdC5zZWxlY3RlZEZpbGVOYW1lICE9PSAnJyA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIF9ob2lzdGVkXzUsIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJoMSIsIG51bGwsIF90b0Rpc3BsYXlTdHJpbmcodGhpcy4kc3RvcmUuc3RhdGUuZ2l0LnNlbGVjdGVkRmlsZU5hbWUpLCAxCiAgLyogVEVYVCAqLwogICldKSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCJ2LWlmIiwgdHJ1ZSksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzYsIFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9wcmlzbV9lZGl0b3IsIHsKICAgIGNsYXNzOiAibXktZWRpdG9yIiwKICAgIG1vZGVsVmFsdWU6IHRoaXMuJHN0b3JlLnN0YXRlLmdpdC5kZWNvZGVEYXRhLAogICAgIm9uVXBkYXRlOm1vZGVsVmFsdWUiOiBfY2FjaGVbMF0gfHwgKF9jYWNoZVswXSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgcmV0dXJuIF90aGlzLiRzdG9yZS5zdGF0ZS5naXQuZGVjb2RlRGF0YSA9ICRldmVudDsKICAgIH0pLAogICAgaGlnaGxpZ2h0OiAkb3B0aW9ucy5oaWdobGlnaHRlciwKICAgICJsaW5lLW51bWJlcnMiOiAiIiwKICAgIGlnbm9yZVRhYktleTogIiIsCiAgICBsYW5ndWFnZTogIkphdmFTY3JpcHQiLAogICAgcmVhZG9ubHk6ICIiCiAgfSwgbnVsbCwgOAogIC8qIFBST1BTICovCiAgLCBbIm1vZGVsVmFsdWUiLCAiaGlnaGxpZ2h0Il0pXSldKTsKfQ=="},{"version":3,"sources":["/Users/andaegeun/Desktop/kanboo_vue_merge/src/components/component/acess/projectDetail/gitAndIssue/GitCode.vue"],"names":[],"mappings":";;AACS,EAAA,KAAK,EAAC;;;;;;8BAEH,mBAAA,CAAkB,IAAlB,EAAkB,IAAlB,EAAI,WAAJ,EAAa,CAAA;AAAA;AAAb,C;;kBAAA,U;;;;;AAMC,EAAA,KAAK,EAAC;;;;;;;uBARf,mBAAA,CAoBM,KApBN,EAAA,UAAA,EAoBM,C,KAnBc,M,CAAO,K,CAAM,G,CAAI,gB,KAAgB,E,kBAAjD,mBAAA,CAEM,KAFN,EAEM,UAFN,EAEM,UAFN,C,SAGqB,M,CAAO,K,CAAM,G,CAAI,gB,KAAgB,E,kBAAtD,mBAAA,CAEM,KAFN,EAEM,UAFN,EAEM,CADF,mBAAA,CAAmD,IAAnD,EAAmD,IAAnD,EAAmD,gBAAA,CAAA,KAAxC,MAAwC,CAAjC,KAAiC,CAA3B,GAA2B,CAAvB,gBAAuB,CAAnD,EAA4C;AAAA;AAA5C,GACE,CAFN,C,qCAgBE,EAZF,mBAAA,CAWM,KAXN,EAAA,UAAA,EAWM,CAVF,YAAA,CASe,uBATf,EASe;AARX,IAAA,KAAK,EAAC,WAQK;qBAPG,M,CAAO,K,CAAM,G,CAAI,UAOpB;;mBAPG,M,CAAO,K,CAAM,G,CAAI,U,GAAU,M;MAO9B;AANV,IAAA,SAAS,EAAE,QAAA,CAAA,WAMD;AALX,oBAAA,EAKW;AAJX,IAAA,YAAY,EAAZ,EAIW;AAHX,IAAA,QAAQ,EAAC,YAGE;AAFX,IAAA,QAAQ,EAAR;AAEW,GATf,E,IAAA,E;;AAAA,I,2BAAA,CAUE,CAXN,CAYE,CApBN,C","sourcesContent":["<template>\n    <div class=\"gitCode\">\n        <div v-if=\"this.$store.state.git.selectedFileName === '' \">\n            <h1>File Name</h1>\n        </div>\n        <div v-else-if=\"this.$store.state.git.selectedFileName !== '' \">\n            <h1>{{this.$store.state.git.selectedFileName}}</h1>\n        </div>\n\n        <div class=\"fileContent\" >\n            <prism-editor\n                class=\"my-editor\"\n                v-model=\"this.$store.state.git.decodeData\"\n                :highlight=\"highlighter\"\n                line-numbers\n                ignoreTabKey\n                language=\"JavaScript\"\n                readonly \n            >\n            </prism-editor>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { mapMutations } from 'vuex'\nimport { PrismEditor } from 'vue-prism-editor';\nimport 'vue-prism-editor/dist/prismeditor.min.css';\nimport { highlight, languages } from 'prismjs/components/prism-core';\nimport 'prismjs/components/prism-clike';\nimport 'prismjs/components/prism-javascript';\nimport 'prismjs/themes/prism-dark.css';\n\nexport default {\n    components : {\n        PrismEditor,\n    },\n    data(){\n        return{\n            s_decodeData : this.$store.state.git.decodeData,\n        }\n    },\n    methods: {\n        highlighter(code){\n            return highlight(code, languages.js)\n        },\n\n        ...mapMutations({\n            getDecodeData : 'git/getDecodeData',\n        }),\n        input_S_decodeData(){\n           console.log(this.s_decodeData)\n           return this.s_decodeData = this.$store.state.git.decodeData\n        },\n    },\n    mounted() {\n        this.input_S_decodeData()\n    },\n}\n</script>\n\n<style scope>\n\n.gitCode {\n    height: 100%;\n}\n\n.fileContent{\n    height: 100%;\n    background-color: #2C2F3B;\n    overflow: scroll;\n    -ms-overflow-style: none;\n    scrollbar-width: none;\n    color: rgb(161, 177, 192);\n    font-size: 22px;\n}\n\n.my-editor{\n    font-family: Fira code, Fira Mono, Consolas, Menlo, Courier, monospace;\n    font-size: 17px;\n    line-height: 1.5;\n    padding: 5px;\n}\n\n.prism-editor__textarea:focus {\n    outline: none;\n}\n\n.fileContent::-webkit-scrollbar, .my-editor::-webkit-scrollbar {\n    display: none;\n}\n\n.ssh-pre[data-label],\n.ssh-pre{\n    margin-top: 0px;\n}\n\n</style>"],"sourceRoot":""}]}