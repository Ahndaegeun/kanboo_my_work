{"remainingRequest":"/Users/andaegeun/Desktop/kanboo_vue_merge/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/andaegeun/Desktop/kanboo_vue_merge/src/components/component/acess/projectDetail/gitAndIssue/Git.vue?vue&type=style&index=0&id=db85d398&scoped=true&lang=css","dependencies":[{"path":"/Users/andaegeun/Desktop/kanboo_vue_merge/src/components/component/acess/projectDetail/gitAndIssue/Git.vue","mtime":1639119881345},{"path":"/Users/andaegeun/Desktop/kanboo_vue_merge/node_modules/css-loader/dist/cjs.js","mtime":1639096176571},{"path":"/Users/andaegeun/Desktop/kanboo_vue_merge/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1639096183165},{"path":"/Users/andaegeun/Desktop/kanboo_vue_merge/node_modules/postcss-loader/src/index.js","mtime":1639096180028},{"path":"/Users/andaegeun/Desktop/kanboo_vue_merge/node_modules/cache-loader/dist/cjs.js","mtime":1639096175720},{"path":"/Users/andaegeun/Desktop/kanboo_vue_merge/node_modules/vue-loader-v16/dist/index.js","mtime":1639096183158}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5ub2RlVHJlZXsKICAgIGhlaWdodDogMjB2aDsKICAgIGJhY2tncm91bmQtY29sb3I6ICMyQzJGM0I7CiAgICBvdmVyZmxvdzogc2Nyb2xsOwogICAgLW1zLW92ZXJmbG93LXN0eWxlOiBub25lOwogICAgc2Nyb2xsYmFyLXdpZHRoOiBub25lOwp9Ci5ub2RlVHJlZTo6LXdlYmtpdC1zY3JvbGxiYXIgewogICAgZGlzcGxheTogbm9uZTsgCn0KLm5vZGVUcmVlID4gaDF7CiAgICBwYWRkaW5nLWJvdHRvbTogNXB4Owp9Ci5yZXBvQ29udGVudHsKICAgIGNvbG9yOiAjZWVlOwp9CgoudHJlZS1yb3ctaXRlbXsKICAgIHBhZGRpbmc6IDA7Cn0KLnRyZWUtbGlzdHsKICAgIGdhcCA6IDVweDsKfQo="},{"version":3,"sources":["/Users/andaegeun/Desktop/kanboo_vue_merge/src/components/component/acess/projectDetail/gitAndIssue/Git.vue"],"names":[],"mappings":";AAqIA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACzB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACjB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACvB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACR,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACf;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AACd;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACN,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AACb","file":"/Users/andaegeun/Desktop/kanboo_vue_merge/src/components/component/acess/projectDetail/gitAndIssue/Git.vue","sourceRoot":"","sourcesContent":["<template>\n    <div class=\"Repo\">\n        <h1>Project Repository</h1>\n        <div class=\"nodeTree\">\n            <h1>Document List</h1>\n            <div class=\"repoContent\">\n                <Tree \n                :search-text=\"searchText\"\n                :use-icon=\"true\"\n                @nodeExpanded=\"onUpdate\"\n                :nodes=\"data\" \n                />\n            </div>\n        </div>\n    </div>\n</template>\n \n<script>\nimport { mapMutations } from 'vuex'\nimport { mapActions } from 'vuex'\nimport { ref } from 'vue';\nimport Tree from 'vue3-tree'\nimport \"vue3-tree/dist/style.css\";\n\nconst key = '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';\n\nexport default {\n    components : {\n        Tree,\n    },\n    data() {\n        return {\n            data : ref([]),\n            searchText : ref(''),\n            encodedData : '',\n        }\n    },\n    methods: {\n        ...mapMutations({\n            setDecodeData : 'git/setDecodeData',\n            setSelectedFileName : 'git/setSelectedFileName',\n        }),\n        ...mapActions({\n            getRepoList : 'git/getRepoList',\n        }),\n        \n        onUpdate(e) {\n            if(e.type === 'file'){\n                this.sendContent(e)\n                return\n            }\n            this.axios.get(`${e.url}`, {\n                    headers : {\n                        Authorization : `token ${key}`\n                    }\n            })\n            .then( res => {\n                for(let i of res.data){\n                    const a = {\n                        idx : i.sha,\n                        label : i.name,\n                        type : i.type,\n                        url : i.url,\n                        nodes : [],\n                        content : null,\n                    }\n                    if(i.type === 'file'){\n                        a.nodes = null\n                        a.content = i.content\n                    }\n\n                    e.nodes.push(a)\n                }\n            })\n        },\n\n        sendContent(e){\n                this.axios.get(`${e.url}`, {\n                        headers : {\n                            Authorization : `token ${key}`\n                        }\n                })\n                .then( res => {\n                    this.encodedData = res.data.content\n                    this.decodeData()\n                    this.setSelectedFileName(res.data.name)\n                })\n        },\n\n        getFileList() {\n            this.axios.get('https://api.github.com/repos/Juwon-Yun/kanboo_my_work/contents', {\n                    headers : {\n                        Authorization : `token ${key}`\n                    }\n                })\n            .then( res =>{\n                for(let i of res.data){\n\n                    // 403 error 방지 \n                    if(i.name === 'package-lock.json' ){\n                        continue\n                    }\n\n                    const array = {\n                        idx : i.sha,\n                        label : i.name,\n                        type : i.type,\n                        url : i.url,\n                        nodes : [],\n                        content : null,\n                    }\n                    if(i.type === 'file'){\n                        array.nodes = null\n                        array.content = i.content\n                    }\n                    this.data.push(array)\n                }// for i of\n            })\n        },\n\n        decodeData(){\n            this.setDecodeData( decodeURIComponent(escape(window.atob(this.encodedData)))) \n        },\n    },\n    \n    mounted() {\n        this.getFileList();\n    },\n}\n\n</script>\n \n<style scoped>\n.nodeTree{\n    height: 20vh;\n    background-color: #2C2F3B;\n    overflow: scroll;\n    -ms-overflow-style: none;\n    scrollbar-width: none;\n}\n.nodeTree::-webkit-scrollbar {\n    display: none; \n}\n.nodeTree > h1{\n    padding-bottom: 5px;\n}\n.repoContent{\n    color: #eee;\n}\n\n.tree-row-item{\n    padding: 0;\n}\n.tree-list{\n    gap : 5px;\n}\n</style>"]}]}